---
- hosts: all
  become: true
  tasks:

  - block: # Instal container runtime

    - name: Install aptitude
      apt:
        update_cache: yes
        name:
        - ca-certificates
        - curl 
        - gnupg 
        - lsb-release
        - apache2
        state: latest

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        state: present

    - name: Install Docker Engine
      apt:
        update_cache: yes
        name:
        - docker-ce
        - docker-ce-cli
        - containerd.io
        - docker-compose-plugin
        state: latest

  - block: # install cri-docker

    - name: install cri-docker
      shell:
        cmd: |
          wget https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.1/cri-dockerd_0.3.1.3-0.debian-bullseye_amd64.deb
          dpkg -i cri-dockerd_0.3.1.3-0.debian-bullseye_amd64.deb
          ls -l  /var/run/cri-dockerd.sock
      register: command_output
    - debug:
        var: command_output.stdout_lines

  - block: # installing kubeaedm

    - name: Update the apt package index and install packages needed to use the Kubernetes apt repository
      apt:
        update_cache: yes
        name:
        - apt-transport-https 
        - ca-certificates 
        - curl
        state: latest

    - name: Download the Google Cloud public signing key
      shell:
        cmd: |
          curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
          echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list

    - name: Update apt package index, install kubelet, kubeadm and kubectl, and pin their version
      apt:
        update_cache: yes
        name:
        - kubelet 
        - kubeadm 
        - kubectl
        state: latest

  - block: # Creating a cluster with kubeadm

    - name: control-plaine(master) configuration
      shell:
        cmd: |
          kubeadm init --pod-network-cidr=192.168.0.0/16 --cri-socket unix:///var/run/cri-dockerd.sock >> cluster_initialized.txt
          mkdir -p $HOME/.kube
          cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
          chown $(id -u):$(id -g) $HOME/.kube/config
          kubectl apply -f https://github.com/weaveworks/weave/releases/download/v2.8.1/weave-daemonset-k8s.yaml

    when: ansible_hostname == "k8s-master"

